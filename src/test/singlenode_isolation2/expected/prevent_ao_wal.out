-- For AO/AOCO tables, their WAL records are only
-- generated for replication purposes (they are not used for crash
-- recovery because AO/AOCO table operations are crash-safe). To decrease
-- disk space usage and to improve performance of AO/AOCO operations, we
-- suppress generation of XLOG_APPENDONLY_INSERT and
-- XLOG_APPENDONLY_TRUNCATE WAL records when wal_level=minimal is
-- specified.
-- This test is supposed to ensure that XLOG_APPENDONLY_INSERT and
-- XLOG_APPENDONLY_TRUNCATE WAL records are not generated when
-- wal_level=minimal is set.
-- Because on mirrored cluster primary segments have replication slots
-- and that conflict with the wal_level=minimal GUC
-- we connect to coordinator in utility mode for AO/AOCO operations and
-- validate WAL records on the coordinator.

GP_IGNORE: formatted by atmsort.pm
-- start_matchignore
-- m/pg_waldump: fatal: error in WAL record at */
-- m/.*The 'DISTRIBUTED BY' clause determines the distribution of data*/
-- m/.*Table doesn't have 'DISTRIBUTED BY' clause*/
-- end_matchignore
GP_IGNORE: defined new match expression

-- start_matchsubs
-- m/tx:\s+\d+/
-- s/tx:\s+\d+/tx: ##/

-- m/lsn: \d\/[0-9a-fA-F]+, prev \d\/[0-9a-fA-F]+/
-- s/lsn: \d\/[0-9a-fA-F]+, prev \d\/[0-9a-fA-F]+/lsn: #\/########, prev #\/########/

-- m/rel \d+\/\d+\/\d+/
-- s/rel \d+\/\d+\/\d+/rel ####\/######\/######/
-- end_matchsubs
GP_IGNORE: defined new match expression

-- Create tables (AO, AOCO)
-1U: CREATE TABLE ao_foo (n int) WITH (appendonly=true);
CREATE
-1U: CREATE TABLE aoco_foo (n int, m int) WITH (appendonly=true, orientation=column);
CREATE

-- Switch WAL file
-1U: SELECT true FROM pg_switch_wal();
 bool 
------
 t    
(1 row)
-- Insert data (AO)
-1U: INSERT INTO ao_foo SELECT generate_series(1,10);
INSERT 10
-- Insert data (AOCO)
-1U: INSERT INTO aoco_foo SELECT generate_series(1,10), generate_series(1,10);
INSERT 10
-- Delete data and run vacuum (AO)
-1U: DELETE FROM ao_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM
-- Delete data and run vacuum (AOCO)
-1U: DELETE FROM aoco_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM
-1Uq: ... <quitting>

-- Validate wal records
! last_wal_file=$(psql -At -c "SELECT pg_walfile_name(pg_current_wal_lsn())" postgres) && pg_waldump ${last_wal_file} -p ${COORDINATOR_DATA_DIRECTORY}/pg_wal -r appendonly;
rmgr: Appendonly  len (rec/tot):    194/   194, tx:      12661, lsn: 0/F8000178, prev 0/F8000128, desc: APPENDONLY_INSERT insert: rel 1663/221728/180472 seg/offset:0/0 len:136
rmgr: Appendonly  len (rec/tot):     58/    58, tx:      12662, lsn: 0/F8000400, prev 0/F80003C0, desc: APPENDONLY_INSERT insert: rel 1663/221728/180476 seg/offset:128/0 len:0
rmgr: Appendonly  len (rec/tot):    138/   138, tx:      12662, lsn: 0/F8000490, prev 0/F8000440, desc: APPENDONLY_INSERT insert: rel 1663/221728/180476 seg/offset:0/0 len:80
rmgr: Appendonly  len (rec/tot):    138/   138, tx:      12662, lsn: 0/F8000520, prev 0/F8000490, desc: APPENDONLY_INSERT insert: rel 1663/221728/180476 seg/offset:128/0 len:80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F8000840, prev 0/F8000810, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180472 seg/offset:0/136
rmgr: Appendonly  len (rec/tot):     58/    58, tx:      12664, lsn: 0/F8000A18, prev 0/F80009D8, desc: APPENDONLY_INSERT insert: rel 1663/221728/180472 seg/offset:1/0 len:0
rmgr: Appendonly  len (rec/tot):    146/   146, tx:      12664, lsn: 0/F8000B38, prev 0/F8000AF8, desc: APPENDONLY_INSERT insert: rel 1663/221728/180472 seg/offset:1/0 len:88
rmgr: Appendonly  len (rec/tot):     58/    58, tx:      12665, lsn: 0/F8000C98, prev 0/F8000C68, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180472 seg/offset:0/0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F80412F8, prev 0/F80412C8, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180476 seg/offset:0/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F8041338, prev 0/F80412F8, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180476 seg/offset:128/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F80D2020, prev 0/F80D1FF0, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180445 seg/offset:0/112
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F8307118, prev 0/F83070E8, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180472 seg/offset:1/88
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F8307158, prev 0/F8307118, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180472 seg/offset:0/0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F8307208, prev 0/F83071D8, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180476 seg/offset:0/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F8307248, prev 0/F8307208, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180476 seg/offset:128/80
rmgr: Appendonly  len (rec/tot):     58/    58, tx:      12673, lsn: 0/F8307440, prev 0/F8307400, desc: APPENDONLY_INSERT insert: rel 1663/221728/180476 seg/offset:1/0 len:0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:      12673, lsn: 0/F8307480, prev 0/F8307440, desc: APPENDONLY_INSERT insert: rel 1663/221728/180476 seg/offset:129/0 len:0
rmgr: Appendonly  len (rec/tot):    122/   122, tx:      12673, lsn: 0/F83075A0, prev 0/F8307560, desc: APPENDONLY_INSERT insert: rel 1663/221728/180476 seg/offset:1/0 len:64
rmgr: Appendonly  len (rec/tot):    122/   122, tx:      12673, lsn: 0/F8307620, prev 0/F83075A0, desc: APPENDONLY_INSERT insert: rel 1663/221728/180476 seg/offset:129/0 len:64
rmgr: Appendonly  len (rec/tot):     58/    58, tx:      12674, lsn: 0/F8307780, prev 0/F8307750, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180476 seg/offset:0/0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:      12674, lsn: 0/F83077C0, prev 0/F8307780, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180476 seg/offset:128/0
rmgr: Appendonly  len (rec/tot):     58/    58, tx:          0, lsn: 0/F8327BF0, prev 0/F8327BC0, desc: APPENDONLY_TRUNCATE truncate: rel 1663/221728/180445 seg/offset:0/112


-- *********** Set wal_level=minimal **************
!\retcode gpconfig -c wal_level -v minimal --masteronly;
(exited with code 0)
-- Set max_wal_senders to 0 because a non-zero value requires wal_level >= 'archive'
!\retcode gpconfig -c max_wal_senders -v 0 --masteronly;
(exited with code 0)
-- Restart QD
!\retcode pg_ctl -l /dev/null -D $COORDINATOR_DATA_DIRECTORY restart -w -t 600 -m fast;
(exited with code 0)

-- Switch WAL file
-1U: SELECT true FROM pg_switch_wal();
 bool 
------
 t    
(1 row)
-- Insert data (AO)
-1U: INSERT INTO ao_foo SELECT generate_series(1,10);
INSERT 10
-- Insert data (AOCO)
-1U: INSERT INTO aoco_foo SELECT generate_series(1,10), generate_series(1,10);
INSERT 10
-- Delete data and run vacuum (AO)
-1U: DELETE FROM ao_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM
-- Delete data and run vacuum (AOCO)
-1U: DELETE FROM aoco_foo WHERE n > 5;
DELETE 5
-1U: VACUUM;
VACUUM

-- Validate wal records
! last_wal_file=$(psql -At -c "SELECT pg_walfile_name(pg_current_wal_lsn())" postgres) && pg_waldump ${last_wal_file} -p ${COORDINATOR_DATA_DIRECTORY}/pg_wal -r appendonly;


-1U: DROP TABLE ao_foo;
DROP
-1U: DROP TABLE aoco_foo;
DROP

-- Reset wal_level
!\retcode gpconfig -r wal_level --masteronly;
(exited with code 0)
-- Reset max_wal_senders
!\retcode gpconfig -r max_wal_senders --masteronly;
(exited with code 0)
-- Restart QD
!\retcode pg_ctl -l /dev/null -D $COORDINATOR_DATA_DIRECTORY restart -w -t 600 -m fast;
(exited with code 0)
